buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'docker'

war {
    baseName = 'backend-spring-boot-template'
    version =  '0.1.0'
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.flywaydb:flyway-core')
	compile('org.mariadb.jdbc:mariadb-java-client')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.springframework.security.oauth:spring-security-oauth2")
	compile('org.springframework.security:spring-security-jwt')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-devtools")
	compileOnly('org.projectlombok:lombok')
	compile('org.apache.commons:commons-lang3:3.5')
	compile('commons-validator:commons-validator:1.6')
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')
	compile('org.apache.poi:poi:3.16')
    compile('org.apache.poi:poi-ooxml:3.16')
    compile('com.opencsv:opencsv:3.10')
    compile('com.fasterxml.jackson.module:jackson-module-jsonSchema:2.8.9')
    compile('net.rakugakibox.spring.boot:orika-spring-boot-starter:1.4.0')
    compile('net.sf.barcode4j:barcode4j:2.1')
	runtime('com.h2database:h2')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

// This creates a flyway patch file with a proper timestamp
task createFlywayPatch() {
    doLast {
        def flywayMigrationsDir = "src/main/resources/db/migration"
        def f = file("$flywayMigrationsDir/V${Calendar.instance.time.time}__POS_XXXX_change_description.sql")
        ant.touch(file: f)
    }
}
// Build Docker Image
task buildDocker(type: Docker, dependsOn: build) {
  push = false 
  maintainer 'Sovanndara Uom <uom.sovanndara@gmail.com>'
  applicationName = war.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from war
      into stageDir
    }
  }
}